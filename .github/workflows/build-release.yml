name: Build Release
on:
  push:
    tags:
      - v*

env:
  BIN_NAME: "hellorust"
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target: # rustc --print target-list
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable
          rustup target add --toolchain stable ${{matrix.target}}

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 60
        run: |
          cross build --release --target ${{matrix.target}}
          echo "==>>> Build finished"
          echo "==>>> tar xz file to release folder"
          mkdir -p release
          tar cvfJ release/${{matrix.target}}.tar.xz target/${{matrix.target}}/release/${{env.BIN_NAME}} 
          echo "==>>> List release folder"
          ls -al release

      - name: Github Release 
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/${{matrix.target}}.tar.xz
          prerelease: ${{ contains(github.ref, '-') }}

  build-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable
          rustup target add --toolchain stable ${{ matrix.target }}

      - name: Build
        shell: bash
        run: |
          cargo build --release --target ${{matrix.target}}
          echo "==>>> Build finished"
          echo "==>>> tar xz file to release folder"
          mkdir -p release
          tar cvfJ release/${{matrix.target}}.tar.xz target/${{matrix.target}}/release/${{env.BIN_NAME}} 
          echo "==>>> List release folder"
          ls -al release

      - name: Github Release 
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: release/${{matrix.target}}.tar.xz
          prerelease: ${{contains(github.ref, '-')}}

  build-windows:
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          # - aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable

      - name: Build
        run: |
          cargo build --release --target ${{matrix.target}}
          dir target/${{matrix.target}}/release/
