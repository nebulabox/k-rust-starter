name: Build Release
on:
  push:
    tags:
      - v*

env:
  BIN_NAME: "hellorust"
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target: # rustc --print target-list
          ##### ==>>> tie 1
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - i686-unknown-linux-gnu
          - i686-pc-windows-gnu
          ###### ==>>> popular
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
          - mipsel-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          ##### ==>>> others
          - aarch64-linux-android
          - x86_64-unknown-netbsd
          - x86_64-unknown-illumos
          - x86_64-unknown-freebsd
          - x86_64-unknown-dragonfly
          - x86_64-sun-solaris
          - x86_64-linux-android
          # - wasm32-unknown-emscripten
          - thumbv8m.main-none-eabihf
          - thumbv8m.main-none-eabi
          - thumbv8m.base-none-eabi
          - thumbv7neon-unknown-linux-gnueabihf
          - thumbv7neon-linux-androideabi
          - thumbv7m-none-eabi
          - thumbv7em-none-eabihf
          - thumbv7em-none-eabi
          - thumbv6m-none-eabi
          - sparcv9-sun-solaris
          - sparc64-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc-unknown-linux-gnu
          - mipsel-unknown-linux-gnu
          - mips64el-unknown-linux-muslabi64
          - mips64el-unknown-linux-gnuabi64
          - mips64-unknown-linux-muslabi64
          - mips64-unknown-linux-gnuabi64
          - mips-unknown-linux-musl
          - mips-unknown-linux-gnu
          - i686-unknown-linux-musl
          - i686-unknown-freebsd
          - i686-linux-android
          - i586-unknown-linux-musl
          - i586-unknown-linux-gnu
          - armv7-unknown-linux-musleabihf
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-gnueabi
          - armv7-unknown-linux-musleabi
          - armv7-linux-androideabi
          - armv5te-unknown-linux-musleabi
          - armv5te-unknown-linux-gnueabi
          - arm-unknown-linux-musleabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-gnueabihf
          - arm-linux-androideabi

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable
          rustup target add --toolchain stable ${{matrix.target}}

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 60
        run: |
          pwd
          cross build --release --target ${{matrix.target}}
          echo "==>>> Build finished"
          echo "==>>> tar xz file"
          pushd target/${{matrix.target}}/release/
          tar cvfJ ${{matrix.target}}.tar.xz ${{env.BIN_NAME}}
          echo "==>>> List release folder"
          ls -al
          popd

      - name: Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{matrix.target}}/release/${{matrix.target}}.tar.xz
          prerelease: ${{ contains(github.ref, '-') }}

  build-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable
          rustup target add --toolchain stable ${{ matrix.target }}

      - name: Build
        shell: bash
        run: |
          pwd
          cargo build --release --target ${{matrix.target}}
          echo "==>>> Build finished"
          echo "==>>> tar xz file"
          pushd target/${{matrix.target}}/release/
          tar cvfJ ${{matrix.target}}.tar.xz ${{env.BIN_NAME}}
          echo "==>>> List release folder"
          ls -al
          popd

      - name: Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{matrix.target}}/release/${{matrix.target}}.tar.xz
          prerelease: ${{ contains(github.ref, '-') }}

  build-windows:
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup default stable
          rustup override set stable
          rustup target add --toolchain stable ${{matrix.target}}

      - name: Build
        shell: cmd
        run: |
          cd 
          cargo build --release --target ${{matrix.target}}
          pushd target\${{matrix.target}}\release\
          ren ${{env.BIN_NAME}}.exe ${{matrix.target}}.${{env.BIN_NAME}}.exe
          echo "==>>> List release folder"
          dir
          popd

      - name: Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{matrix.target}}/release/${{matrix.target}}.${{env.BIN_NAME}}.exe
          prerelease: ${{ contains(github.ref, '-') }}
